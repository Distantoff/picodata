-- TEST: window1
-- SQL:
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(a INT PRIMARY KEY, b INT, c INT, d INT);
INSERT INTO t1 VALUES(1, 2, 3, 4);
INSERT INTO t1 VALUES(5, 6, 7, 8);
INSERT INTO t1 VALUES(9, 10, 11, 12);

-- TEST: window1-1.1
-- SQL:
SELECT COL_1 FROM (SELECT a, sum(b) OVER () FROM t1 ORDER BY a);
-- EXPECTED:
18, 18, 18

-- TEST: window1-1.2
-- SQL:
SELECT a, sum(b) OVER () FROM t1 ORDER BY a;
-- EXPECTED:
1, 18, 5, 18, 9, 18

-- TEST: window1-1.5
-- SQL:
SELECT a, sum(b) OVER (PARTITION BY c) FROM t1 ORDER BY a;
-- EXPECTED:
1, 2, 5, 6, 9, 10

-- TEST: window1-2.1
-- SQL:
SELECT COL_1 FROM (SELECT a, sum(b) OVER (PARTITION BY c) FROM t1 ORDER BY a);
-- EXPECTED:
2, 6, 10

-- TEST: window1-2.2
-- SQL:
SELECT COL_1 FROM (SELECT a, sum(b) OVER (ORDER BY c) FROM t1 ORDER BY a);
-- EXPECTED:
2, 8, 18

-- TEST: window1-2.3
-- SQL:
SELECT COL_1 FROM (SELECT a, sum(b) OVER (PARTITION BY d ORDER BY c) FROM t1 ORDER BY a);
-- EXPECTED:
2, 6, 10

-- TEST: window1-2.4
-- SQL:
SELECT COL_1 FROM (SELECT a, sum(b) FILTER (WHERE a>0) OVER (PARTITION BY d ORDER BY c)
FROM t1 ORDER BY a);
-- EXPECTED:
2, 6, 10

-- TEST: window1-2.5
-- SQL:
SELECT COL_1 FROM (SELECT a, sum(b) OVER (ORDER BY c RANGE UNBOUNDED PRECEDING)
FROM t1 ORDER BY a);
-- EXPECTED:
2, 8, 18

-- TEST: window1-2.6
-- SQL:
SELECT COL_1 FROM (SELECT a, sum(b) OVER (ORDER BY c ROWS 45 PRECEDING) FROM t1
ORDER BY a);
-- EXPECTED:
2, 8, 18

-- TEST: window1-2.7
-- SQL:
SELECT COL_1 FROM (SELECT a, sum(b) OVER (ORDER BY c RANGE CURRENT ROW) FROM t1
ORDER BY a);
-- EXPECTED:
2, 6, 10

-- TEST: window1-2.8
-- SQL:
SELECT COL_1 FROM (SELECT a, sum(b) OVER (ORDER BY c RANGE BETWEEN UNBOUNDED PRECEDING
AND CURRENT ROW) FROM t1 ORDER BY a);
-- EXPECTED:
2, 8, 18

-- TEST: window1-2.9
-- SQL:
SELECT COL_1 FROM (SELECT a, sum(b) OVER (ORDER BY c ROWS BETWEEN UNBOUNDED PRECEDING
AND UNBOUNDED FOLLOWING) FROM t1 ORDER BY a);
-- EXPECTED:
18, 18, 18

-- TEST: window1-3.1
-- SQL:
SELECT * FROM t1 WHERE sum(b) OVER ();
-- ERROR:
filter expression is not a trivalent expression

-- TEST: window1-3.2
-- SQL:
SELECT * FROM t1 GROUP BY sum(b) OVER ();
-- ERROR:
misuse of window function SUM()

-- TEST: window1-3.3
-- SQL:
SELECT * FROM t1 GROUP BY a HAVING sum(b) OVER ();
-- ERROR:
filter expression is not a trivalent expression
