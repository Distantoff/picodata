STATEMENT   ::= EXPLAIN | DML | DDL
EXPLAIN     ::= 'EXPLAIN' DML
DML         ::= (SELECT | SELECT 'UNION ALL' SELECT | SELECT ('EXCEPT' 'DISTINCT'? ) SELECT  | INSERT)
DDL	    ::= CreateTable | DropTable
CreateTable ::= 'create table' table '(' Column (',' Column)* ',' PrimaryKey ')' ('using' ('memtx' | 'vinyl'))? Distribution Option?
Column      ::= name ('Bool' | 'Decimal' | 'Double' | 'Int' | 'Number' | 'Scalar' | 'String' | 'Text' | 'Unsigned' | 'Varchar') ('null' | 'not null')?
PrimaryKey  ::= 'primary key' '(' name (',' name)* ')'
Distribution ::= 'global' | ('distributed by' '(' name (',' name)*  ')')
DropTable   ::= 'drop table' table Option?
Option      ::= 'option' '(' 'timeout' '=' DOUBLE ')'
SELECT      ::= 'SELECT' ((column (',' column)*) ) 'FROM' (table ('AS' name)? | '(' (SELECT | VALUES) ')' 'AS' name) ( ('INNER')? 'JOIN' (table ('AS' name)? | ('(' (SELECT | VALUES) ')' 'AS' name))  'ON' expression )? ( 'WHERE' expression )? ( 'GROUP BY' expression(',' expression)* )?
VALUES      ::= 'VALUES' '(' row (',' row)* ')'
row         ::= '(' (value (',' value)*) ')'
column      ::= '*' | (table '.')? name ('AS' name)? |  table '.' '*' | expression ('AS' name)?
expression  ::= column_name
               | 'CAST' '(' expression 'AS' type ')'
               | expression ('IS NULL' | 'IS NOT NULL')
               | expression ('OR' | 'AND' | '*' | '/' | '+' | '-' | '=' | '>' | '<' | '>=' | '<=' | ('<>' | '!=')) expression
               | expression 'BETWEEN' expression 'AND' expression
               | reference
               | SELECT
               | value
reference   ::= (table '.')? name
value       ::= 'TRUE'
                | 'FALSE'
                | 'NULL'
                | '?'
                | INTEGER
                | UNSIGNED
                | DOUBLE
                | DECIMAL
                | STRING
                | row
type        ::= 'ANY'
                | 'BOOL'
                | 'BOOLEAN'
                | 'DECIMAL'
                | 'DOUBLE'
                | 'INT'
                | 'INTEGER'
                | 'NUMBER'
                | 'SCALAR'
                | 'STRING'
                | 'TEXT'
                | 'UNSIGNED'
                | 'VARCHAR' ('(' length ')')?
INSERT      ::= 'INSERT' 'INTO' table ('(' name (',' name)* ')')?  'VALUES' row

