statement   ::= explain | ddl | dml | dql | acl | call
explain     ::= 'EXPLAIN' ( dml | dql )

dql         ::= (select | values)
                ( 'OPTION' '('
                    (('VTABLE_MAX_ROWS' | 'SQL_VDBE_MAX_STEPS') '=' unsigned)
                    (',' (('VTABLE_MAX_ROWS' | 'SQL_VDBE_MAX_STEPS') '=' unsigned))*
                ')')?
select      ::= 'SELECT' 'DISTINCT'?  ((projection (',' projection)*))
                'FROM' (table | ('(' (select | values) ')')) (('AS')? name)?
                (
                    ('INNER')? 'JOIN' (
                        ((table | ('(' (select | values) ')')) (('AS')? name)?)
                    )
                    'ON' expression
                )*
                ('WHERE' expression)?
                ('GROUP' 'BY' expression (',' expression)*)?
                ('HAVING' expression)?
                ((('UNION' 'ALL') | ('EXCEPT' 'DISTINCT'?)) select)?
projection  ::= '*' | expression (('AS')? name)? | aggregate
expression  ::= (table '.')? column
               | expression ('IS' ('NOT')? 'NULL')
               | expression ('OR' | 'AND' | '*' | '/' | '+' | '-' | '=' | '>' | '<' | '>=' | '<=' | ('<>' | '!=')) expression
               | expression ('NOT')? 'BETWEEN' expression 'AND' expression
               | ('NOT')? 'EXISTS' '(' (select | values) ')'
               | expression ('NOT')? 'IN' '(' (select | values) ')'
               | (table '.')? column
               | '(' (select | values) ')'
               | literal
               | cast
               | ('(' (expression(',' expression)*) ')')
               | 'NOT' expression
               | '(' expression ')'
aggregate   ::= ('AVG' | 'COUNT' | 'MAX' | 'MIN' | 'SUM' | 'TOTAL') '(' expression ')'
               | 'GROUP_CONCAT' '(' expression ','  "'" string "'" ')'
cast        ::= 'CAST' '(' expression 'AS' type ')'
values      ::= 'VALUES'
                ('(' (expression(',' expression)*) ')')
                (',' ('(' (expression(',' expression)*) ')'))*
literal     ::= 'TRUE'
                | 'FALSE'
                | 'NULL'
                | '?'
                | ('$' unsigned)
                | integer
                | unsigned
                | double
                | decimal
                | string

dml         ::= (call | delete | insert | update) 
                ( 'OPTION' '('
                    (('VTABLE_MAX_ROWS' | 'SQL_VDBE_MAX_STEPS') '=' unsigned)
                    (',' (('VTABLE_MAX_ROWS' | 'SQL_VDBE_MAX_STEPS') '=' unsigned))*
                ')')?
call        ::= 'CALL' procedure '(' literal? (',' literal)* ')'
delete      ::= 'DELETE' 'FROM' table ('WHERE' expression)?
insert      ::= 'INSERT' 'INTO' table ('(' column (',' column)* ')')? (values | select)
                ('ON' 'CONFLICT' 'DO'  ('NOTHING' | 'REPLACE' | 'FAIL'))?
update      ::= 'UPDATE' table
                'SET' (
                    column '=' expression
                    (',' column '=' expression)*
                )
                ('FROM' '(' (select | values) ')' (('AS')? name)?)? ('WHERE' expression)?

acl         ::= (alter_user | create_role | create_user | drop_role | drop_user | grant | revoke)
                ('OPTION' '(' ('TIMEOUT' '=' double)')')?
revoke      ::= 'REVOKE' (
                    (('CREATE' | 'ALTER' | 'DROP') 'USER')
                    | (('ALTER' | 'DROP') 'ON' 'USER' user)
                    | (('CREATE' | 'DROP') 'ROLE')
                    | ('DROP' 'ON' 'ROLE' role)
                    | (('CREATE' | 'ALTER' | 'DROP' | 'READ' | 'WRITE') 'TABLE')
                    | (('ALTER' | 'DROP' | 'READ' | 'WRITE') 'ON' 'TABLE' table)
                    | (('CREATE' | 'EXECUTE' | 'DROP') 'PROCEDURE')
                    | (('EXECUTE' | 'DROP') 'ON' 'PROCEDURE' procedure ('(' type (',' type)* ')')?)
                    | role
                )
                'FROM' (role | user)
grant       ::= 'GRANT' (
                    (('CREATE' | 'ALTER' | 'DROP') 'USER')
                    | (('ALTER' | 'DROP') 'ON' 'USER' user)
                    | (('CREATE' | 'DROP') 'ROLE')
                    | ('DROP' 'ON' 'ROLE' role)
                    | (('CREATE' | 'ALTER' | 'DROP' | 'READ' | 'WRITE') 'TABLE')
                    | (('ALTER' | 'DROP' | 'READ' | 'WRITE') 'ON' 'TABLE' table)
                    | (('CREATE' | 'EXECUTE' | 'DROP') 'PROCEDURE')
                    | (('EXECUTE' | 'DROP') 'ON' 'PROCEDURE' procedure ('(' type (',' type)* ')')?)
                    | role
                )
                'TO' (role | user)

ddl         ::= (alter_procedure | create_procedure | create_table | drop_procedure | drop_table)
                ('OPTION' '(' ('TIMEOUT' '=' double)')')?

alter_procedure ::= 'ALTER' 'PROCEDURE' procedure ('(' type (',' type)* ')')?
                     'RENAME' 'TO' procedure
create_procedure ::= 'CREATE' 'PROCEDURE' procedure '(' type (',' type)* ')'
                     ('language' 'SQL')? (
                         ('as' '$$' (insert | update | delete) '$$')
                         | ('begin' 'atomic' (insert | update | delete) 'end')
                     )
create_role    ::= 'CREATE' 'ROLE' role
create_table   ::= 'CREATE' 'TABLE' table
                   '('
                       column type ('NOT'? 'NULL')? (',' column type ('NOT'? 'NULL')?)* ',' 
                       'PRIMARY KEY' '(' column (',' column)* ')'
                   ')'
                   ('USING' ('MEMTX' | 'VINYL'))?
                   ('DISTRIBUTED' (('BY' '(' column (',' column)*  ')') | 'GLOBALLY'))
create_user    ::= 'CREATE' 'USER' user 'WITH'? 'PASSWORD' "'" password "'"
                   ('USING' ('CHAP-SHA1' | 'LDAP' | 'MD5'))?
alter_user     ::= 'ALTER' 'USER' user
                   'WITH'? (
                       'LOGIN'
                       | 'NOLOGIN'
                       | 'PASSWORD' "'" password "'" ('USING' ('CHAP-SHA1' | 'LDAP' | 'MD5'))?
                       | 'RENAME' 'TO' user
                   )
drop_procedure ::= 'DROP' 'PROCEDURE' procedure ('(' type (',' type)* ')')?
drop_table     ::= 'DROP' 'TABLE' table
drop_role      ::= 'DROP' 'ROLE' role
drop_user      ::= 'DROP' 'USER' user
type        ::= ('BOOL' | 'BOOLEAN')
                | 'DECIMAL'
                | 'DOUBLE'
                | ('INT' | 'INTEGER')
                | 'NUMBER'
                | 'SCALAR'
                | ('STRING' | 'TEXT')
                | 'UNSIGNED'
                | 'UUID'
                | 'VARCHAR' ('(' length ')')?
