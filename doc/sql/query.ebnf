STATEMENT   ::= EXPLAIN | DDL | DML | DQL | ACL
EXPLAIN     ::= 'EXPLAIN' ( DML | DQL )
DQL         ::= (SELECT | SELECT UNION ALL SELECT | SELECT (EXCEPT 'DISTINCT'? ) SELECT ) Options?
DML         ::= (DELETE | INSERT | UPDATE) Options?
DDL         ::= CreateTable | DropTable
ACL         ::= DropRole | DropUser | CreateRole | CreateUser | AlterUser | GrantPrivilege | RevokePrivilege
RevokePrivilege      ::= 'revoke' Privilege 'from' (role | user) ('option' '(' ('timeout' '=' DOUBLE)')')?
GrantPrivilege       ::= 'grant' Privilege 'to' (role | user) ('option' '(' ('timeout' '=' DOUBLE)')')?
Privilege ::= (('create' | 'alter' | 'drop') 'user')
              | (('alter' | 'drop') 'on' 'user' (role | user))
              | (('create' | 'drop') 'role')
              | ('drop' 'on' 'role' (role | user))
              | (('read' | 'write' | 'create' | 'alter' | 'drop') 'table')
              | (('alter' | 'drop' | 'read' | 'write') 'on' 'table'? table)
              | role
CreateRole  ::= 'create role' role ('option' '(' ('timeout' '=' DOUBLE)')')?
CreateTable ::= 'create table' table '(' Column (',' Column)* ',' PrimaryKey ')' ('using' ('memtx' | 'vinyl'))? Distribution ('option' '(' ('timeout' '=' DOUBLE)')')?
CreateUser  ::= 'create user' user 'with'? 'password' "'" password "'" ('using' ('chap-sha1' | 'ldap' | 'md5'))? ('option' '(' ('timeout' '=' DOUBLE)')')?
AlterUser   ::= 'alter user' user 'with'? ('login' | 'nologin' | 'password' "'" password "'" ('using' ('chap-sha1' | 'ldap' | 'md5'))?) ('option' '(' ('timeout' '=' DOUBLE)')')?
Column      ::= name ('Bool' | 'Decimal' | 'Double' | 'Int' | 'Number' | 'Scalar' | 'String' | 'Text' | 'Unsigned' | 'Varchar') (('not'?)  'null')?
PrimaryKey  ::= 'primary key' '(' name (',' name)* ')'
Distribution ::= 'global' | ('distributed by' '(' name (',' name)*  ')')
DropTable   ::= 'drop table' table ('option' '(' ('timeout' '=' DOUBLE)')')?
DropRole    ::= 'drop role' role ('option' '(' ('timeout' '=' DOUBLE)')')?
DropUser    ::= 'drop user' user ('option' '(' ('timeout' '=' DOUBLE)')')?
Options     ::= 'option' '(' ('vtable_max_rows' '=' UNSIGNED)? (',' 'sql_vdbe_max_steps' '=' UNSIGNED)? ')'
SELECT      ::= 'SELECT' ((alias (',' alias)*) ) 'FROM' (table ('AS' name)? | '(' (SELECT | VALUES) ')' ('AS' name)?) ( ('INNER')? 'JOIN' (table ('AS' name)? | ('(' (SELECT | VALUES) ')' ('AS' name)?))  'ON' expression )? ( 'WHERE' expression )? ( 'GROUP BY' expression(',' expression)* )?
VALUES      ::= 'VALUES' '(' row (',' row)* ')'
SUBQUERY    ::= '(' (SELECT | VALUES) ')'
row         ::= '(' (value (',' value)*) ')'
alias      ::= '*' | (table '.')? name ('AS' name)? |  table '.' '*' | expression ('AS' name)?
expression  ::= column_name
               | 'CAST' '(' expression 'AS' type ')'
               | expression ('IS' ('NOT')? 'NULL')
               | expression ('OR' | 'AND' | '*' | '/' | '+' | '-' | '=' | '>' | '<' | '>=' | '<=' | ('<>' | '!=')) expression
               | expression ('NOT')? 'BETWEEN' expression 'AND' expression
               | ('NOT')? 'EXISTS' SUBQUERY
               | expression ('NOT')? 'IN' SUBQUERY
               | reference
               | SUBQUERY
               | value
               | 'NOT' expression
reference   ::= (table '.')? name
value       ::= 'TRUE'
                | 'FALSE'
                | 'NULL'
                | '?'
                | INTEGER
                | UNSIGNED
                | DOUBLE
                | DECIMAL
                | STRING
                | row
type        ::= 'ANY'
                | 'BOOL'
                | 'BOOLEAN'
                | 'DECIMAL'
                | 'DOUBLE'
                | 'INT'
                | 'INTEGER'
                | 'NUMBER'
                | 'SCALAR'
                | 'STRING'
                | 'TEXT'
                | 'UNSIGNED'
                | 'VARCHAR' ('(' length ')')?
DELETE      ::= 'DELETE' 'FROM' table ('WHERE' expression)?
INSERT      ::= 'INSERT' 'INTO' table ('(' name (',' name)* ')')? (VALUES row | SELECT )  ('on conflict' 'do'  ('nothing' | 'replace' | 'fail'))?
UPDATE      ::= 'UPDATE' table 'set' ( name '=' ((table '.')? name) (',' name '=' (table '.')? name)* ) ( 'FROM' '(' SELECT ')' ( 'AS' name )? )? ( 'WHERE' expression )?

