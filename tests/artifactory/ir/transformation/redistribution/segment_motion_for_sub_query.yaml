# t1(a int) key [a]
# t2(a int, b int) key [a]
# select * from t1 where a = (select b from t2)
---
nodes:
  arena:
    - Expression:
        Reference:
          targets: ~
          position: 0
          parent: 0
    - Expression:
        Alias:
          name: a
          child: 0
    - Expression:
        Row:
          list:
            - 1
          distribution:
            Segment:
              keys:
                - positions:
                    - 0
    - Relational:
        ScanRelation:
          output: 2
          id: 0
          relation: t1
    - Expression:
        Reference:
          targets: ~
          position: 0
          parent: 4
    - Expression:
        Alias:
          name: a
          child: 4
    - Expression:
        Reference:
          targets: ~
          position: 1
          parent: 4
    - Expression:
        Alias:
          name: b
          child: 6
    - Expression:
        Row:
          list:
            - 5
            - 7
          distribution:
            Segment:
              keys:
                - positions:
                    - 0
    - Relational:
        ScanRelation:
          output: 8
          id: 4
          relation: t2
    - Expression:
        Reference:
          targets:
            - 0
          position: 1
          parent: 10
    - Expression:
        Alias:
          name: b
          child: 10
    - Expression:
        Row:
          list:
            - 11
          distribution: Any
    - Relational:
        Projection:
          children:
            - 9
          id: 10
          output: 12
    - Expression:
        Reference:
          targets:
            - 0
          position: 0
          parent: 14
    - Expression:
        Alias:
          name: b
          child: 14
    - Expression:
        Row:
          list:
            - 15
          distribution: Any
    - Relational:
        ScanSubQuery:
          alias: ~
          children:
            - 13
          id: 14
          output: 16
    - Expression:
        Reference:
          targets:
            - 1
          position: 0
          parent: 18
    - Expression:
        Row:
          list:
            - 18
          distribution: Any
    - Expression:
        Reference:
          targets:
            - 0
          position: 0
          parent: 18
    - Expression:
        Row:
          list:
            - 20
          distribution:
            Segment:
              keys:
                - positions:
                    - 0
    - Expression:
        Bool:
          left: 21
          op: Eq
          right: 19
    - Expression:
        Reference:
          targets:
            - 0
          position: 0
          parent: 18
    - Expression:
        Alias:
          name: a
          child: 23
    - Expression:
        Row:
          list:
            - 24
          distribution:
            Segment:
              keys:
                - positions:
                    - 0
    - Relational:
        Selection:
          children:
            - 3
            - 30
          filter: 22
          id: 18
          output: 25
    - Expression:
        Reference:
          targets:
            - 0
          position: 0
          parent: 27
    - Expression:
        Alias:
          name: b
          child: 27
    - Expression:
        Row:
          list:
            - 28
          distribution: ~
    - Relational:
        Motion:
          children:
            - 17
          id: 27
          policy:
            Segment:
              positions:
                - 0
          output: 29
relations:
  t1:
    Segment:
      columns:
        - name: a
          type: integer
      key:
        positions:
          - 0
      name: t1
  t2:
    Segment:
      columns:
        - name: a
          type: integer
        - name: b
          type: integer
      key:
        positions:
          - 0
      name: t2
slices: ~
top: 26
